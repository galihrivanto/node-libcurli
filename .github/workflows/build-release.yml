name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        node-version: [18, 20]
        os: [ubuntu-20.04]
        include:
          # Add Fedora container build
          - os: ubuntu-latest
            container: fedora:latest
            node-version: 20

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - if: runner.os == 'Linux' && !matrix.container
      name: Install Ubuntu dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libssl-dev libnghttp2-dev libbrotli-dev zlib1g-dev \
          python3 python3-pip ninja-build gyp pkg-config \
          libzstd-dev libldap2-dev
        sudo pip3 install gyp-next
        sudo ln -s /usr/bin/python3 /usr/bin/python || true

    - if: matrix.container == 'fedora:latest'
      name: Install Fedora dependencies
      run: |
        dnf install -y gcc-c++ make python3-pip openssl-devel nghttp2-devel brotli-devel \
          zlib-devel ninja-build pkg-config zstd-devel openldap-devel \
          nodejs npm
        pip3 install gyp-next

    - if: runner.os == 'macOS'
      name: Install macOS system dependencies
      run: brew install coreutils wget automake libtool cmake gnu-sed m4 autoconf groff

    - name: Build curl-impersonate
      run: |
        ./scripts/build-deps.sh

    - name: Install dependencies
      run: |
        npm ci

    - name: Build Native and TypeScript
      run: npm run build

    - name: Bundle dependencies
      run: |
        mkdir -p build/lib
        # Copy all required .so files to lib directory
        if [ -f "/usr/lib64/libldap-2.4.so.2" ]; then
          cp /usr/lib64/libldap-2.4.so.2 build/lib/
          cp /usr/lib64/liblber-2.4.so.2 build/lib/
        fi
        if [ -f "/usr/lib/x86_64-linux-gnu/libldap-2.4.so.2" ]; then
          cp /usr/lib/x86_64-linux-gnu/libldap-2.4.so.2 build/lib/
          cp /usr/lib/x86_64-linux-gnu/liblber-2.4.so.2 build/lib/
        fi

    - name: Build Artifact
      run: npm run package

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ matrix.os }}-${{ matrix.node-version }}
        path: build/**/*.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - uses: actions/checkout@v3

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: List artifacts
      run: |
        find artifacts -type f -name "*.tar.gz"

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*.tar.gz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build TypeScript
      run: npm run build:ts

    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}