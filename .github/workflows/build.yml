name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libssl-dev libnghttp2-dev libbrotli-dev zlib1g-dev \
          python3 python3-pip ninja-build gyp pkg-config
        sudo pip3 install gyp-next
        sudo ln -s /usr/bin/python3 /usr/bin/python || true

    - name: Build curl-impersonate
      run: |
        ./scripts/build-deps.sh

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Run tests
      run: npm test

    # Upload artifacts if using Node 20.x
    - name: Package and Upload Artifacts
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          build/
          dist/
          lib/

  publish:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'

    # Download artifacts from build job
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: .

    # Create GitHub Release with binaries
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: build/**/*.tar.gz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

    # Publish to npm
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}